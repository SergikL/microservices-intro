apiVersion: v1
kind: PersistentVolume
metadata:
  name: songs-pv
  labels:
    type: local
spec:
  storageClassName: "manual"
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/songs"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: songs-pvc
  namespace: k8s-program
spec:
  storageClassName: "manual"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: songs-service
  namespace: k8s-program
spec:
  type: NodePort
  selector:
    app: songs-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: songs-service-deployment
  namespace: k8s-program
spec:
  replicas: 2
  selector:
    matchLabels:
      app: songs-service
  template:
    metadata:
      labels:
        app: songs-service
    spec:
      containers:
        - name: songs-service
          image: songs-service:k8s
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              value: "http://eureka:8761/eureka"
            - name: RESOURCE_SERVICE_URL
              value: "http://resources-service:8082/resources"
            - name: spring.datasource.url
              value: "jdbc:postgresql://postgres-svc:5432/resources" # start using postgres statefulset
              #value: "jdbc:postgresql://postgres:5432/resources"
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: spring.jpa.hibernate.ddl-auto
              value: "update"
          volumeMounts:
            - mountPath: "/data"
              name: songs-storage
      volumes:
        - name: songs-storage
          persistentVolumeClaim:
            claimName: songs-pvc
